def buy():
    AID=request.form['Agency ID']
    FID=request.form['Fight']
    ##insert TID request?
    cmd_ticket = 'INSERT INTO Ticket(AID,FID,PID) VALUES (AID=(:AID),FID=(:FID),PID=(:PID));'
    cursor=g.conn.execute(text(cmd_ticket),AID=AID,FID=FID,PID=PID)
    cursor.close()
    ##(balance--price)
    cmd_price='SELECT Sell.price from Sell where Sell.AID = (:AID) and Sell.FID=(:FID) LIMIT 1;'
    cursor =g.conn.execute(text(cmd_price),AID=AID,FID=FID)
    r_price=0
    for result in cursor:
        r_price=result['price']
    cursor.close()

    cmd_balance='UPDATE Passenger  SET balance = balance - (:r_price) where Passenger.PID=(:PID);'
    cursor = g.conn.execute(text(cmd_balance),PID=PID,r_price=r_price)
    cursor.close()

    ##(milege++distance)
    cmd_distance='SELECT Flight.distance from Flight where Flight.FID = (:FID)'
    cursor=g.conn.execute(text(cmd_distance),FID=FID)
    distance=0
    for result in cursor:
        distance=result
    cursor.close()
    
    cmd_check=
'if NOT exists(select * from Millege where PID=(:PID) and CID=CID(:CID)) BEGIN INSERT INTO Milege(Air_miles,PID,CID) VALUES (0,(:PID),(CID)) END '
    cursor =g.conn.execute(cmd_check,PID=PID,CID=CID)
    cursor.close()

    cmd_millege='UPDATE Millage  SET mile = mile + (:distance) where Millage.PID=(:PID) and MIllage.CID=(:CID)'
    cursor =g.conn.execute(cmd_millege,PID=PID,CID=CID,distance=distance)
    cursor.close()

    ##(seat--)
    cmd_seat='UPDATE Sell SET  seat_remain = seat_remain -1 where Sell.AID=(:AID) and Sell.FID=(:FID)'
    cursor =g.conn.execute(cmd_seat,AID=AID,FID=FID)
    cursor.close()   





############
    ##(balance+topup)
    topup=request.form['top up']
    cmd_topup = 'UPDATE Passenger SET balance = balance + (:topup) where Passenger.PID=(:PID)'
    cursor = g.conn.execute(cmd_balance, topup=topup, PID=session(PID))
    cursor.close()
    
    ##I want to go anywhere but butler library(which i can afford)
    location=request.form['location']
    cmd_go=SELECT S.AID,S.FID,S.price FROM Sell S LEFT OUTER JOIN Flight F ON S.FID=F.FID LEFT OUTER JOIN Airport A ON F.dep_IATA=A.IATA,Passenger P WHERE A.location=(:location) AND S.price <= P.balance AND P.PID=(:PID);
    cursor = g.conn.execute(cmd_go, location=location, PID=session(PID))
    cursor.close()
